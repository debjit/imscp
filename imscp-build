#!/bin/sh

# i-MSCP a internet Multi Server Control Panel
#
# Copyright (C) 2010 by internet Multi Server Control Panel - http://i-mscp.net
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>
#
# The Original Code is "i-MSCP internet Multi Server Control Panel".
#
# The Initial Developer of the Original Code is i-MSCP Team.
# Portions created by Initial Developer are Copyright (C) 22010 by
# internet Multi Server Control Panel. All Rights Reserved.
#
# @category		i-MSCP
# @copyright	2010 by i-MSCP | http://i-mscp.net
# @author		Daniel Andreca <sci2tech@i-mscp.net>
# @version		SVN: $Id$
# @link			http://i-mscp.net i-MSCP Home Site
# @license		http://www.gnu.org/licenses/ GPL v2

SELFDIR=$(dirname "$0")
cd $SELFDIR
SELFDIR=$(pwd)

. $SELFDIR/prebuild-files/imscp-install-functions
. $SELFDIR/prebuild-files/display-functions
. $SELFDIR/prebuild-files/so-functions
. $SELFDIR/prebuild-files/log-functions

title "Check available commands"

COMMANDS="which uname tr mkdir rm pwd id touch pwd cp chown chmod printf"
for COMM in ${COMMANDS}; do testCommand ${COMM}; done

title "Detecting OS"
detect_os

NewTest="dialog"

if ([ "${DIST}" = 'FreeBSD' ] || [ "${DIST}" = 'OpenBSD' ]) ; then
	NewTest="c${NewTest}";
fi

testAnyCommand ${NewTest} 'DIALOG';

testroot

writelog 'All tests... '; oktxt "PASS"; writelog "\n"

_AvailableOS="Centos Debian Fedora FreeBSD Gentoo OpenBSD Opensuse Ubuntu"

while [ ! $OS ]; do
	OS=$(msgopts 'Select operating system' "${_AvailableOS} Neither" "${DIST}" 3>&1 1>&2 2>&3)

	if [ "${OS}" = "Neither" ]; then
		colortxt 'yellow' "Not supported distribution ";
		failtxt;
	fi

	if [ "${OS}" = "" ]; then
		msgbox "\nYou must select one distribution or Neither " "Please select operating system";
	elif [ "${OS}" != "${DIST}" ]; then
		msgask "\nAre sure you want continue with $OS?" "We have detected ${DIST}" || OS=
	fi
done

TEXT=$(cat README | sed -e "s/'/\"/g")
msgbox "${TEXT}" 'i-MSCP preinstall script'

title "Loading $OS specific variable"
specific "prebuild-files/${OS}-variable"
oktxt "Done"; writelog "\n"

_os=$(echo "$OS" | tr [:upper:] [:lower:])
title "Proccess $_os specific configuration files"
process_file
oktxt "Done"; writelog "\n"

title "Daemon build"
builddaemon
oktxt "Done"; writelog "\n"

title "Engine setup"
engine
oktxt "Done"; writelog "\n"

title "GUI setup"
gui
oktxt "Done"; writelog "\n"

title "Key setup"
key
oktxt "Done"; writelog "\n"

title "Maintainer scripts"
maintainer
oktxt "Done"; writelog "\n"

TEXT=$(cat ${SELFDIR}/docs/${DIST}/INSTALL | sed -e "s/'/\"/g")
msgbox "${TEXT}" 'i-MSCP preinstall script'

if [ "${WARNINGS}" ]; then
	msgbox "\n\\Zb -> Finished but with errors:\n${WARNINGS}" 'i-MSCP preinstall script'
else
	msgbox "\n\\Z2 -> Finished without errors" 'i-MSCP preinstall script'
fi

TEXT="\nYou can proceed to installation/update. If you do not know how \nplease type:\n\n\\Z1cat ${SELFDIR}/docs/${DIST}/INSTALL\n\n\\Znand read carefully. All steps are crucial\n\n"
msgbox "${TEXT}" 'i-MSCP preinstall script'

colortxt 'green' "\nYou can proceed to installation/update. If you do not know how \n"\
"please type:\n\n"
colortxt 'red' "cat ${SELFDIR}/docs/${DIST}/INSTALL\n\n"
colortxt 'green' "and read carefully. All steps are crucial\n\n"

if [ "${WARNINGS}" ]; then
	warntxt; writelog "Finished but with errors"; warntxt; writelog ":\n";
	writelog "${WARNINGS}\n"
else
	writelog "Finished without errors";oktxt;writelog "\n";
fi
