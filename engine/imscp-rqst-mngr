#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010 - 2011 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category		i-MSCP
# @copyright	2010 - 2011 by i-MSCP | http://i-mscp.net
# @author		Daniel Andreca <sci2tech@gmail.com>
# @version		SVN: $Id$
# @link			http://i-mscp.net i-MSCP Home Site
# @license		http://www.gnu.org/licenses/gpl-2.0.html GPL v2

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin";
use lib "$FindBin::Bin/PerlLib";
use lib "$FindBin::Bin/PerlVendor";

use iMSCP::Debug;
use iMSCP::Boot;
use iMSCP::Dialog;

newDebug('imscp-rqst-mngr.log');

sub start_up {
	debug('Starting...');

	# Fixing umask for logfiles permissions on creation (0640)
	umask(027);

	iMSCP::Boot->new(mode => 'setup')->init();

	if(-e '/tmp/imscp-backup-all.lock') {
		error('Backup engine is currently running. Aborting...');
		exit 1;
	}

	debug('Ending...');
	0;
}

sub shut_down {
	debug('Starting...');
	debug('Ending...');
	0;
}

sub mngr_engine_process{
	debug('Starting...');

	my ($type, $sql) = @_;
	my $rs;

	debug("=======================");
	debug("Processing type $type.");
	debug("=======================");

	print("=======================\n");
	print("Processing type $type.\n");
	print("=======================\n");

	my $database = iMSCP::Database->factory();
	my $rdata = $database->doQuery('id', $sql);
	if(ref $rdata ne 'HASH'){
		error("$rdata");
		return 1;
	}

	require "imscp-${type}-mngr";

	my $i = 1;
	my $time = time;
	my $total = scalar keys %$rdata;

	foreach (keys %$rdata) {
		my $id		= $rdata->{$_}->{id};
		my $name	= $rdata->{$_}->{name};
		my $status	= $rdata->{$_}->{status};

		debug("processing $id, $name, $status.");
		print("processing $id, $name, $status. ($i of $total: remaining ".($total -$i).")\n");
		$i++;

		newDebug("${type}_mngr_$name.log");

		$rs = eval "start_${type}_mngr(\$id, \$rdata);";
		if($@){
			error("Error while processing  $id, $name, $status: $@");
			$rs = 1;
		}

		endDebug();

		error("Error while processing  $id, $name, $status.") if $rs;
		error("See ${type}_mngr_$name.log for details.") if $rs;
	}

	debug('Ending...');
	0;
}

sub engine {
	debug('Starting...');
	my ($rs, $rdata, $sql);

	$sql = "
		SELECT
			*,
			`admin_id` AS 'id',
			`admin_name` AS 'name',
			`admin_status` AS 'status'
		FROM
			`admin`
		WHERE
			`admin_status`
		IN (
			'toadd',
			'toenable',
			'todisable',
			'delete'
		)
		AND
			`admin_type` = 'user'
		ORDER BY
			`admin_id`
		;
	";
	mngr_engine_process('usr', $sql);

	$sql = "
		SELECT
			`domain`.*,
			`domain`.`domain_id` AS 'id',
			`domain`.`domain_name` AS 'name',
			`domain`.`domain_status` AS 'status',
			`ips`.`ip_number`,
			`props`.`user_cgi` AS `have_cgi`,
			`props`.`user_dns` AS `have_dns`,
			`props`.`user_php` AS `have_php`,
			`props`.`user_traffic_limit` AS `bandwidth`,
			`props`.`user_mailacc_limit` AS `mail_limit`,
			`mail_count`.`mail_on_domain`,
			`ips_count`.`domains_on_ip`
		FROM
			`domain` AS `domain`
		LEFT JOIN
			`server_ips` AS `ips`
		ON
			`domain`.`domain_ip_id` = `ips`.`ip_id`
		LEFT JOIN
			`user_system_props` AS `props`
		ON
			`domain`.`domain_admin_id` = `props`.`user_id`
		LEFT JOIN
			(SELECT `domain_id` AS `id`, COUNT( `domain_id` ) AS `mail_on_domain` FROM `mail_users` WHERE `sub_id`= 0 GROUP BY `domain_id`) AS `mail_count`
		ON
			`domain`.`domain_id` = `mail_count`.`id`
		LEFT JOIN
			(SELECT `domain_ip_id` AS `ip_id`, COUNT( `domain_ip_id` ) AS `domains_on_ip` FROM `domain`GROUP BY `domain_ip_id`) AS `ips_count`
		ON
			`domain`.`domain_ip_id` = `ips_count`.`ip_id`
		WHERE
			`domain_status`
		IN (
			'toadd',
			'change',
			'restore',
			'toenable',
			'todisable',
			'delete'
		)
	";
	mngr_engine_process('dmn', $sql);

	debug('Ending...');
	0;
}

start_up() and exit 1;
engine() and exit 1;
shut_down() and exit 1;

exit 0;
